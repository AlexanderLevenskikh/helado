import path from 'path';
import { Configuration } from 'webpack';
import MiniCssExtractPlugin from "mini-css-extract-plugin";
import {VanillaExtractPlugin} from "@vanilla-extract/webpack-plugin";
import {webpackContext} from "./context";
import HtmlWebpackPlugin from "html-webpack-plugin";

const webpackConfig = (): Configuration => {
    return {
        entry: './src/index.tsx',
        output: {
            filename: 'main.js',
            path: path.resolve(webpackContext, 'dist'),
        },
        module:{
            rules:[
                {
                    test: /\.[tj]sx?$/,
                    use: {
                        loader: 'babel-loader',
                        options: {
                            cacheDirectory: true,
                            configFile: path.resolve(webpackContext, 'babel.config.js')
                        },
                    },
                },
                {
                    test: /\.vanilla\.css$/i, // Targets only CSS files generated by vanilla-extract
                    use: [
                        MiniCssExtractPlugin.loader,
                        {
                            loader: require.resolve('css-loader'),
                            options: {
                                url: false // Required as image imports should be handled via JS/TS import statements
                            }
                        }
                    ]
                }
            ]
        },
        plugins: [
            new VanillaExtractPlugin(),
            new MiniCssExtractPlugin(),
            new HtmlWebpackPlugin({
                title: 'Helado',
                template: path.resolve(webpackContext, 'static/template/index.html'),
                inject: true,
            })
        ],
        resolve: {
            extensions: ['.js', '.jsx', '.ts', '.tsx'],
        },
    }
}

export default webpackConfig;